<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.web.mappers.MemberMapper">
	
	<select id="login" resultType="com.web.vo.MemberVO">
		select *
		from member 
		where (mem_id=#{mem_id} and mem_pwd=#{mem_pwd})
	</select>


	<!-- 아이디 중복검사 -->
	<select id="idCheck" resultType="com.web.vo.MemberVO">
		select *
		from member 
		where mem_id=#{mem_id}
	</select>
	
	<!-- 아이디찾기 -->
	<select id="findId" resultType="com.web.vo.MemberVO">
		select mem_id
		from member 
		where (mem_name=#{mem_name} and mem_email=#{mem_email})
	</select>
	
	<!-- 회원가입처리 -->
	<insert id="join">
		insert into member(mem_id,mem_pwd,mem_name,mem_email,mem_call,mem_postcode,mem_address1,mem_address2,mem_grade,mem_point)
		values(#{mem_id},#{mem_pwd},#{mem_name},#{mem_email},#{mem_call},
		#{mem_postcode},#{mem_address1},#{mem_address2},
		default,default)
	</insert>
	
	
	
	
	<!-- 아이디찾기 -->
	<select id="findPw" resultType="com.web.vo.MemberVO">
		select *
		from member 
		where (mem_id=#{mem_id} and mem_email=#{mem_email})
	</select>
	
	
	<!-- 회원정보수정 -->
	<update id="updateMem">
		update member set
		mem_name=#{mem_name},mem_email=#{mem_email},mem_call=#{mem_call}
		,mem_postcode=#{mem_postcode},mem_address1=#{mem_address1},mem_address2=#{mem_address2}
		where mem_id=#{mem_id}
	</update>
	
	
	<!-- 비밀번호변경 -->
	<update id="updatePwd">
		update member set
		mem_pwd=#{mem_pwd}
		where mem_id=#{mem_id}
	</update>
	
	<!-- 회원탈퇴 -->
	<delete id="deleteMem">
		delete from member
		where mem_id=#{mem_id}
	</delete>
	
	
	<!-- 회원리스트 -->
	<select id="userList" resultType="com.web.vo.MemberVO">
		select mem_id,mem_id,mem_name,mem_email,mem_call,mem_postcode,mem_address1,mem_address2,mem_grade,mem_point
		from(
			select rownum rnum,mem_id,mem_name,mem_email,mem_call,mem_postcode,mem_address1,mem_address2,mem_grade,mem_point
			from(
				select mem_id,mem_name,mem_email,mem_call,mem_postcode,mem_address1,mem_address2,mem_grade,mem_point
				from member
				order by mem_id
			)
		)where rnum between #{startRow} and #{endRow}
	</select>
	
	<!-- 회원리스트  -->
	<select id="getTotalRow" resultType="long">
		select count(*) from member
	</select>
	
	
	<!-- 사용포인트차감 -->
	<update id="minusPoint">
		update member set mem_point= mem_point - #{usePoint} where mem_id=#{mem_id}
	</update>
	
	
	<!-- 포인트증가 -->
	<update id="plusPoint">
		update member set mem_point= mem_point + #{addPoint} where mem_id=#{mem_id}
	</update>
	
	<!-- 등급변경 -->
	<update id="updateGrade">
		update member set mem_grade= #{mem_grade}
		where mem_id=#{mem_id}
	</update>
	
	
</mapper>